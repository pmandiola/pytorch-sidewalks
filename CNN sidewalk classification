{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CNN sidewalk classification - Pablo","version":"0.3.2","provenance":[{"file_id":"1Kl_bPQZNe0EWKhh2PcQ4Kj_f91wo-g6H","timestamp":1558711682126}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"mPktRb8TSdiQ","colab_type":"code","outputId":"bd3a20a1-01d8-43e9-a49e-c5e816a63dc2","executionInfo":{"status":"ok","timestamp":1559666959877,"user_tz":240,"elapsed":33762,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":124}},"source":["import torch\n","import torchvision\n","\n","from torch.utils.data import Dataset, DataLoader, Subset\n","from torchvision import transforms, utils, models\n","from torch.autograd import Variable\n","from torch import optim\n","import torch.nn as nn\n","import torch.nn.functional as F\n","\n","from PIL import Image\n","\n","from sklearn import metrics\n","\n","import os\n","from google.colab import drive\n","drive.mount('/gdrive')\n","\n","import warnings\n","warnings.filterwarnings(\"ignore\")\n","\n","import pandas as pd\n","import numpy as np\n","\n","import matplotlib.pyplot as plt\n","import matplotlib.patches as patches\n","from skimage import io, transform"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=email%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdocs.test%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.photos.readonly%20https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fpeopleapi.readonly&response_type=code\n","\n","Enter your authorization code:\n","··········\n","Mounted at /gdrive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"cSCmRqy6bJhk","colab_type":"text"},"source":["## 1. Loading data\n","\n","### Transform our data to one-hot encoding"]},{"cell_type":"code","metadata":{"id":"L586jYN1eT6s","colab_type":"code","outputId":"b07d7fe6-bd4e-4d99-e727-2ded3098aeb4","executionInfo":{"status":"ok","timestamp":1559669975540,"user_tz":240,"elapsed":276,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":662}},"source":["path = '/gdrive/My Drive/NYU/Spring 2019/Urban Science Intensive I/Getting to Zero Capstone /VML'\n","\n","sidewalks_df = pd.read_csv(path + '/S_Output.csv')\n","sidewalks_df.head(20)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image_id</th>\n","      <th>type</th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>y1</th>\n","      <th>y2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>sidewalk</td>\n","      <td>33.530752</td>\n","      <td>1271.252847</td>\n","      <td>747.243243</td>\n","      <td>837.553343</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>sidewalk</td>\n","      <td>6.030624</td>\n","      <td>363.345112</td>\n","      <td>690.709867</td>\n","      <td>769.131075</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>sidewalk</td>\n","      <td>818.657244</td>\n","      <td>1270.954064</td>\n","      <td>671.104566</td>\n","      <td>889.779087</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>sidewalk</td>\n","      <td>858.734177</td>\n","      <td>1278.527043</td>\n","      <td>702.802878</td>\n","      <td>860.454676</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>sidewalk</td>\n","      <td>8.837745</td>\n","      <td>486.075949</td>\n","      <td>699.856115</td>\n","      <td>914.969784</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>3</td>\n","      <td>sdwkshde</td>\n","      <td>17.675489</td>\n","      <td>309.321059</td>\n","      <td>798.572662</td>\n","      <td>873.715108</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>3</td>\n","      <td>street_trees</td>\n","      <td>8.837745</td>\n","      <td>268.078251</td>\n","      <td>511.263309</td>\n","      <td>810.359712</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>4</td>\n","      <td>sidewalk</td>\n","      <td>668.029197</td>\n","      <td>1270.656934</td>\n","      <td>725.430524</td>\n","      <td>898.041002</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>4</td>\n","      <td>street_trees</td>\n","      <td>684.379562</td>\n","      <td>1200.583942</td>\n","      <td>384.874715</td>\n","      <td>676.446469</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>4</td>\n","      <td>street_trees</td>\n","      <td>14.014599</td>\n","      <td>334.014599</td>\n","      <td>310.232346</td>\n","      <td>685.776765</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>5</td>\n","      <td>sidewalk</td>\n","      <td>679.708029</td>\n","      <td>1270.656934</td>\n","      <td>604.136674</td>\n","      <td>741.758542</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>5</td>\n","      <td>sidewalk</td>\n","      <td>9.343066</td>\n","      <td>422.773723</td>\n","      <td>615.799544</td>\n","      <td>825.731207</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>6</td>\n","      <td>NaN</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","      <td>-1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>7</td>\n","      <td>sidewalk</td>\n","      <td>761.459854</td>\n","      <td>1263.649635</td>\n","      <td>611.134396</td>\n","      <td>818.733485</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>7</td>\n","      <td>sidewalk</td>\n","      <td>9.343066</td>\n","      <td>373.722628</td>\n","      <td>599.471526</td>\n","      <td>753.421412</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>8</td>\n","      <td>sidewalk</td>\n","      <td>0.000000</td>\n","      <td>252.039381</td>\n","      <td>676.667838</td>\n","      <td>712.660808</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>8</td>\n","      <td>sidewalk</td>\n","      <td>1112.573840</td>\n","      <td>1278.199719</td>\n","      <td>674.868190</td>\n","      <td>721.659051</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>8</td>\n","      <td>sidewalk</td>\n","      <td>637.299578</td>\n","      <td>889.338959</td>\n","      <td>669.469244</td>\n","      <td>712.660808</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>9</td>\n","      <td>sidewalk</td>\n","      <td>427.157652</td>\n","      <td>785.086306</td>\n","      <td>676.282014</td>\n","      <td>758.791367</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>9</td>\n","      <td>sidewalk</td>\n","      <td>438.941312</td>\n","      <td>651.047181</td>\n","      <td>630.607194</td>\n","      <td>698.382734</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    image_id          type           x1           x2          y1          y2\n","0          1      sidewalk    33.530752  1271.252847  747.243243  837.553343\n","1          2      sidewalk     6.030624   363.345112  690.709867  769.131075\n","2          2      sidewalk   818.657244  1270.954064  671.104566  889.779087\n","3          3      sidewalk   858.734177  1278.527043  702.802878  860.454676\n","4          3      sidewalk     8.837745   486.075949  699.856115  914.969784\n","5          3      sdwkshde    17.675489   309.321059  798.572662  873.715108\n","6          3  street_trees     8.837745   268.078251  511.263309  810.359712\n","7          4      sidewalk   668.029197  1270.656934  725.430524  898.041002\n","8          4  street_trees   684.379562  1200.583942  384.874715  676.446469\n","9          4  street_trees    14.014599   334.014599  310.232346  685.776765\n","10         5      sidewalk   679.708029  1270.656934  604.136674  741.758542\n","11         5      sidewalk     9.343066   422.773723  615.799544  825.731207\n","12         6           NaN    -1.000000    -1.000000   -1.000000   -1.000000\n","13         7      sidewalk   761.459854  1263.649635  611.134396  818.733485\n","14         7      sidewalk     9.343066   373.722628  599.471526  753.421412\n","15         8      sidewalk     0.000000   252.039381  676.667838  712.660808\n","16         8      sidewalk  1112.573840  1278.199719  674.868190  721.659051\n","17         8      sidewalk   637.299578   889.338959  669.469244  712.660808\n","18         9      sidewalk   427.157652   785.086306  676.282014  758.791367\n","19         9      sidewalk   438.941312   651.047181  630.607194  698.382734"]},"metadata":{"tags":[]},"execution_count":37}]},{"cell_type":"code","metadata":{"id":"IYExeIU-xoLq","colab_type":"code","outputId":"62bc680c-2eb0-426d-b9b7-ddc5d759e594","executionInfo":{"status":"ok","timestamp":1559666972821,"user_tz":240,"elapsed":332,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":355}},"source":["#Transform to one-hot encoding\n","sidewalks_labels = pd.crosstab(sidewalks_df.image_id, sidewalks_df.type, dropna=False).clip(upper=1).reset_index()\n","sidewalks_labels.head(10)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>type</th>\n","      <th>image_id</th>\n","      <th>sdwkpave</th>\n","      <th>sdwkshde</th>\n","      <th>sidewalk</th>\n","      <th>street_trees</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["type  image_id  sdwkpave  sdwkshde  sidewalk  street_trees\n","0            1         0         0         1             0\n","1            2         0         0         1             0\n","2            3         0         1         1             1\n","3            4         0         0         1             1\n","4            5         0         0         1             0\n","5            7         0         0         1             0\n","6            8         0         0         1             0\n","7            9         0         0         1             0\n","8           10         0         0         1             0\n","9           12         0         0         1             0"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"KqrhYvgTkYeV","colab_type":"code","outputId":"9390337d-747c-4261-b6f5-31ca96563fd3","executionInfo":{"status":"ok","timestamp":1559666974081,"user_tz":240,"elapsed":189,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":355}},"source":["#Add images with no labels (crosstab eliminated them)\n","sidewalks_labels = pd.concat([sidewalks_labels,pd.DataFrame({'image_id':sidewalks_df.image_id[~sidewalks_df.image_id.isin(sidewalks_labels.image_id)]})]).fillna(0).astype(int).sort_values('image_id')\n","sidewalks_labels.head(10)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image_id</th>\n","      <th>sdwkpave</th>\n","      <th>sdwkshde</th>\n","      <th>sidewalk</th>\n","      <th>street_trees</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    image_id  sdwkpave  sdwkshde  sidewalk  street_trees\n","0          1         0         0         1             0\n","1          2         0         0         1             0\n","2          3         0         1         1             1\n","3          4         0         0         1             1\n","4          5         0         0         1             0\n","12         6         0         0         0             0\n","5          7         0         0         1             0\n","6          8         0         0         1             0\n","7          9         0         0         1             0\n","8         10         0         0         1             0"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"JM7fadd5-Ysi","colab_type":"code","outputId":"b0a50f2c-7aa7-4c41-c37e-78c53daea31b","executionInfo":{"status":"ok","timestamp":1559666975439,"user_tz":240,"elapsed":211,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":237}},"source":["# Some images have sdwkshde or sdwkpave but not sidewalk, which is wrong\n","wrong_labels = (sidewalks_labels.sidewalk == 0) &\\\n","    ((sidewalks_labels.sdwkpave == 1) | (sidewalks_labels.sdwkshde == 1))\n","\n","print(\"Total sidewalk=0 with error:\", len(sidewalks_labels.loc[wrong_labels]))\n","print(\"Total sidewalk=1:\", len(sidewalks_labels.loc[sidewalks_labels.sidewalk == 1]))\n","sidewalks_labels.loc[wrong_labels].head()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Total sidewalk=0 with error: 246\n","Total sidewalk=1: 1788\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>image_id</th>\n","      <th>sdwkpave</th>\n","      <th>sdwkshde</th>\n","      <th>sidewalk</th>\n","      <th>street_trees</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21</th>\n","      <td>26</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>69</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>73</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>74</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    image_id  sdwkpave  sdwkshde  sidewalk  street_trees\n","21        26         1         0         0             0\n","48        61         1         0         0             0\n","55        69         1         0         0             0\n","59        73         1         0         0             0\n","60        74         1         0         0             0"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"j7ZPrNSy_IWG","colab_type":"code","outputId":"48356eff-698a-4674-eb47-aedbb8af853a","executionInfo":{"status":"ok","timestamp":1559666980166,"user_tz":240,"elapsed":463,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["# Fix error\n","sidewalks_labels.sidewalk = (sidewalks_labels.sidewalk + sidewalks_labels.sdwkshde + sidewalks_labels.sdwkpave).clip(upper=1)\n","print(\"Total sidewalk=1:\", len(sidewalks_labels.loc[sidewalks_labels.sidewalk == 1]))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Total sidewalk=1: 2034\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NTMasdpv71bQ","colab_type":"code","outputId":"a1312c10-ca17-499b-bb82-09105bf3c6d4","executionInfo":{"status":"ok","timestamp":1559666983343,"user_tz":240,"elapsed":355,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["# Images with more than one label\n","(sidewalks_labels.iloc[:,1:].sum(axis=1) > 1).sum()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["914"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"FOaVsTtq0bdD","colab_type":"code","outputId":"f78ab9d4-7b6c-4250-ec48-d043971305ad","executionInfo":{"status":"ok","timestamp":1559666983796,"user_tz":240,"elapsed":243,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["# Total images\n","sidewalks_df.image_id.nunique()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2597"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"G0wJZCOj0IVT","colab_type":"code","outputId":"cbd2d387-0539-49e4-ba33-3ccb4c508b6a","executionInfo":{"status":"ok","timestamp":1559666984379,"user_tz":240,"elapsed":230,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["len(sidewalks_labels)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2597"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"id":"gBzyqCPc1wZl","colab_type":"code","colab":{}},"source":["sidewalks_labels.to_csv(path + '/Sidewalks_Labels.csv', index=False)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gAUi8HIdvYDb","colab_type":"text"},"source":["### Define Custom Dataset\n","\n","Following this tutorial:\n","https://pytorch.org/tutorials/beginner/data_loading_tutorial.html"]},{"cell_type":"code","metadata":{"id":"1wj5idFYpUyP","colab_type":"code","colab":{}},"source":["class BuiltEnvDataset(Dataset):\n","    \"\"\"Built Environment dataset.\"\"\"\n","\n","    def __init__(self, csv_file, root_dir, transform=None):\n","        \"\"\"\n","        Args:\n","            csv_file (string): Path to the csv file with annotations.\n","            root_dir (string): Directory with all the images.\n","            transform (callable, optional): Optional transform to be applied\n","                on a sample.\n","        \"\"\"\n","        \n","        # Transforms\n","        self.transform = transform\n","        # Read the csv file\n","        self.data_info = pd.read_csv(csv_file)\n","        # First column contains the image paths\n","        self.image_arr = np.asarray(self.data_info.iloc[:, 0])\n","        # Second column is the labels\n","        self.label_arr = np.asarray(self.data_info.iloc[:, 1:], dtype=np.float32)\n","        # Calculate len\n","        self.data_len = len(self.data_info.index)\n","        # Label names\n","        self.label_names = np.asarray(self.data_info.columns[1:])\n","        # Root image dir\n","        self.root_dir = root_dir\n","\n","    def __getitem__(self, index):\n","        # Get image name from the pandas df\n","        single_image_name = self.root_dir + str(self.image_arr[index]) + '.jpg'\n","        # Open image\n","        image = Image.open(single_image_name)\n","\n","        # If there is an operation\n","        if self.transform:\n","            image = self.transform(image)\n","\n","        # Get label(class) of the image based on the cropped pandas column\n","        single_image_label = self.label_arr[index]\n","\n","        return (image, single_image_label)\n","\n","    def __len__(self):\n","        return self.data_len\n","      \n","    def set_transform(self, transform):\n","        # set transform (useful for setting different transforms for train/test)\n","        self.transform = transform"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-YqH_HyNvhlZ","colab_type":"text"},"source":["### Create train and test data loaders\n","\n","Augmentation is done by PyTorch transformations while training."]},{"cell_type":"code","metadata":{"id":"weQdt6amSshY","colab_type":"code","colab":{}},"source":["transform_train = transforms.Compose(\n","    [transforms.Resize((256,320)),\n","     transforms.ColorJitter(0.8, contrast=0.3),\n","     transforms.RandomHorizontalFlip(),\n","     transforms.ToTensor(),\n","     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n","\n","transform_test = transforms.Compose(\n","    [transforms.Resize((256,320)),\n","     transforms.ToTensor(),\n","     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n","\n","batch_size = 4\n","num_workers = 4\n","test_split = .2\n","shuffle_dataset = True\n","random_seed= 42\n","\n","dataset = BuiltEnvDataset(csv_file=path + '/Sidewalks_Labels.csv',\n","                          root_dir=path + '/Sidewalks/')\n","\n","# Creating data indices for training and test splits:\n","dataset_size = len(dataset)\n","indices = list(range(dataset_size))\n","split = int(np.floor(test_split * dataset_size))\n","if shuffle_dataset :\n","    np.random.seed(random_seed)\n","    np.random.shuffle(indices)\n","train_indices, test_indices = indices[split:], indices[:split]\n","\n","# Creating train/test datasets and loaders, with different transformations:\n","trainset = Subset(dataset, train_indices)\n","trainset.dataset.set_transform(transform_train)\n","\n","testset = Subset(dataset, test_indices)\n","testset.dataset.set_transform(transform_test)\n","\n","trainloader = DataLoader(trainset,\n","                         batch_size=batch_size, num_workers=num_workers)\n","testloader = DataLoader(testset,\n","                        batch_size=batch_size, num_workers=num_workers)\n","\n","#Save class names for later\n","classes = dataset.label_names"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"X---RVHESxrl","colab_type":"code","outputId":"c5f46e71-c764-4b1b-c382-7a33d0aa40fa","executionInfo":{"status":"ok","timestamp":1558963812216,"user_tz":240,"elapsed":25984,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":137}},"source":["# functions to show an image\n","def imshow(img):\n","    img = img / 2 + 0.5     # unnormalize\n","    npimg = img.numpy()\n","    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n","    plt.show()\n","\n","\n","# get some random training images\n","dataiter = iter(trainloader)\n","images, labels = dataiter.next()\n","\n","# show images\n","imshow(torchvision.utils.make_grid(images))\n","\n","# print labels\n","print(' '.join('%5s' % classes[np.asarray(labels[j]) != 0] for j in range(4)))"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXoAAABmCAYAAADFw1rEAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzsvXm0pldd5/v57f08zzud9z1zzVWp\npDJVQmZCwmCACAEUBBVQW2x1eaGltV1e7+21rnfAS4ttu5xo9LZe9KqNogxBICJISMg8A6mMVZWk\nqlJVqaozj+/wDHvv3/1jv6eCd/VqodtckXV+a711znnn53n2/g3f7/f3K1FVNm3TNm3TNu2718w/\n9RfYtE3btE3btJfWNh39pm3apm3ad7ltOvpN27RN27Tvctt09Ju2aZu2ad/ltunoN23TNm3Tvstt\n09Fv2qZt2qZ9l9tL4uhF5M0iclhEnhOR/+Wl+IxN27RN27RN+9ZM/rF19CJigWeANwIvAI8AP6aq\nT/+jftCmbdqmbdqmfUv2UmT0rwCeU9WjqloCnwDe/hJ8zqZt2qZt2qZ9C5a8BO+5Ezj5TX+/AFz3\n/32SiLwPeB9AmqbXTE1NvQRfZdM2bdM27bvXzpw5s6Cq0//Q814KR/8tmap+FPgowI4dO/SXf/1j\nbB1vsby8QOly7nv4UdKkxjNPHiapZ1y2/yL6g5yJqTG6Kyvk3XXysqSeZBCEKpTMzM4x3h6n3qiz\nsHSajhi8pNgQKIsCm6RUEkhNxpWX7SPLMrIso6wCPe+YqKWEoAT13H94nu/ZvwPnStR7uoOKBOjn\nA44sLLH3Za+ks36Sp19Y5xX7tlG78CoEsCZB1QMCgLWCqiIi33QDghIAEEQUBASDsYIGxUp8jR++\nj4gO398gCEHic4ykhBCwRgl+heXlLotnnuXzN3+Ft9x0A3lRsLK8zvPHj1OUBbVGGykqilZgW2c3\nH/nIh/iVX/8wVkb5nrd8PwFBFAKKegUxePWoKsGDFcUpWIRSFKvgvEdEMJrgNGAIIPG1BiWoweMx\nCJVXRAyiiiA48YQAVi0BjygogoYAIggBNfF9Sg1YFMUgEjAIiFAsd3n6nr8iqed059bQEaVRH4dG\nRquT0Uyb/MgPvpuDh57jszf/JY16E/UpzbFJptoNMMKR4zMYAiFfY2VulouuvwDJa0zt2klr6062\n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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["['sidewalk'] ['sdwkpave' 'sidewalk'] ['sidewalk' 'street_trees'] ['sidewalk']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"nQnUrbQqbN9y","colab_type":"text"},"source":["## 2. Define a Convolutional Neural Network\n","\n","Simple CNN adapted from PyTorch tutorial:\n","\n","https://pytorch.org/tutorials/beginner/blitz/cifar10_tutorial.html#sphx-glr-beginner-blitz-cifar10-tutorial-py\n","\n","Just as a simple starting point"]},{"cell_type":"code","metadata":{"id":"rKKtD4PSThNh","colab_type":"code","outputId":"6b3df813-0e7c-457e-e022-fe2cff9b7a06","executionInfo":{"status":"ok","timestamp":1558963870429,"user_tz":240,"elapsed":5704,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":156}},"source":["class Net(nn.Module):\n","    def __init__(self):\n","        super(Net, self).__init__()\n","        self.conv1 = nn.Conv2d(3, 6, 5)\n","        self.pool = nn.MaxPool2d(2, 2)\n","        self.conv2 = nn.Conv2d(6, 16, 5)\n","        self.fc1 = nn.Linear(16 * 61 * 77, 120)\n","        self.fc2 = nn.Linear(120, 84)\n","        self.fc3 = nn.Linear(84, 4)\n","\n","    def forward(self, x):\n","        x = self.pool(F.relu(self.conv1(x)))\n","        x = self.pool(F.relu(self.conv2(x)))\n","        x = x.view(-1, self.num_flat_features(x))\n","        x = F.relu(self.fc1(x))\n","        x = F.relu(self.fc2(x))\n","        x = self.fc3(x)\n","        return x\n","      \n","    def num_flat_features(self, x):\n","        # print(x.size())\n","        size = x.size()[1:]  # all dimensions except the batch dimension\n","        num_features = 1\n","        for s in size:\n","            num_features *= s\n","        return num_features\n","\n","net = Net()\n","net.cuda()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Net(\n","  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n","  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n","  (fc1): Linear(in_features=75152, out_features=120, bias=True)\n","  (fc2): Linear(in_features=120, out_features=84, bias=True)\n","  (fc3): Linear(in_features=84, out_features=4, bias=True)\n",")"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"CCDqF5N2bX9z","colab_type":"text"},"source":["## 3. Define a Loss function and optimizer\n","\n","Using BCE Logit loss for multilabel classification."]},{"cell_type":"code","metadata":{"id":"Ep0ZRyCFTlq0","colab_type":"code","colab":{}},"source":["bce_logit_loss = nn.BCEWithLogitsLoss()\n","optim_sgd = optim.SGD(net.parameters(), lr=0.001, momentum=0.9)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sKDP_EuBbb9F","colab_type":"text"},"source":["## 4. Train the network"]},{"cell_type":"code","metadata":{"id":"kKj-aKkPjykk","colab_type":"code","colab":{}},"source":["def train_model(model, dataloader, criterion, optimizer, n_epochs=20, cuda=True):\n","  \n","  for epoch in range(n_epochs):  # loop over the dataset multiple times\n","\n","    running_loss = []\n","    for i, (inputs, target) in enumerate(dataloader, 0):\n","\n","        if cuda:\n","          inputs, target = Variable(inputs).cuda(), Variable(target).cuda()\n","\n","        # zero the parameter gradients\n","        optimizer.zero_grad()\n","\n","        # forward + backward + optimize\n","        outputs = model(inputs)\n","        loss = criterion(outputs, target)\n","        loss.backward()\n","        optimizer.step()\n","\n","        # print statistics\n","        running_loss.append(loss.item())\n","        \n","    \n","    print('[epoch {}] loss: {:.3f}'.format(\n","        epoch + 1, np.mean(running_loss)))\n","\n","  print('Finished Training')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"lqIyUH5jTwRO","colab_type":"code","outputId":"3e81e4b9-3d05-4fc7-e21c-bcee1904df55","executionInfo":{"status":"ok","timestamp":1558877010019,"user_tz":240,"elapsed":2635527,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":763}},"source":["%%time\n","\n","train_model(model=net,\n","            dataloader=trainloader,\n","            criterion=bce_logit_loss,\n","            optimizer=optim_sgd,\n","            n_epochs=40)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[epoch 1] loss: 0.434\n","[epoch 2] loss: 0.359\n","[epoch 3] loss: 0.344\n","[epoch 4] loss: 0.332\n","[epoch 5] loss: 0.322\n","[epoch 6] loss: 0.310\n","[epoch 7] loss: 0.298\n","[epoch 8] loss: 0.283\n","[epoch 9] loss: 0.269\n","[epoch 10] loss: 0.253\n","[epoch 11] loss: 0.234\n","[epoch 12] loss: 0.219\n","[epoch 13] loss: 0.199\n","[epoch 14] loss: 0.174\n","[epoch 15] loss: 0.156\n","[epoch 16] loss: 0.141\n","[epoch 17] loss: 0.122\n","[epoch 18] loss: 0.104\n","[epoch 19] loss: 0.088\n","[epoch 20] loss: 0.075\n","[epoch 21] loss: 0.065\n","[epoch 22] loss: 0.059\n","[epoch 23] loss: 0.052\n","[epoch 24] loss: 0.051\n","[epoch 25] loss: 0.042\n","[epoch 26] loss: 0.044\n","[epoch 27] loss: 0.039\n","[epoch 28] loss: 0.033\n","[epoch 29] loss: 0.027\n","[epoch 30] loss: 0.029\n","[epoch 31] loss: 0.024\n","[epoch 32] loss: 0.026\n","[epoch 33] loss: 0.023\n","[epoch 34] loss: 0.024\n","[epoch 35] loss: 0.028\n","[epoch 36] loss: 0.026\n","[epoch 37] loss: 0.023\n","[epoch 38] loss: 0.025\n","[epoch 39] loss: 0.021\n","[epoch 40] loss: 0.020\n","Finished Training\n","CPU times: user 2min 32s, sys: 1min 13s, total: 3min 45s\n","Wall time: 43min 55s\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Fii-tBHUbmd6","colab_type":"text"},"source":["## 5. Test the network on the test data\n","\n","With multilabel classification, I'm not sure hoy to best measure accuracy. I decided to do it per class, and included other userful scores because our dataset is so imbalanced."]},{"cell_type":"code","metadata":{"id":"-gtcm4YjlMxX","colab_type":"code","colab":{}},"source":["def test_model(model, dataloader, cuda=True):\n","  \n","  target_all = torch.tensor([])\n","  output_all = torch.tensor([])\n","  \n","  if cuda:\n","    target_all = Variable(target_all).cuda()\n","    output_all = Variable(output_all).cuda()\n","  \n","  with torch.no_grad():\n","      for inputs, target in dataloader:\n","          \n","          if cuda:\n","            inputs, target = Variable(inputs).cuda(), Variable(target).cuda()\n","          \n","          outputs = model(inputs)\n","          output_all = torch.cat((output_all, outputs), 0)\n","          target_all = torch.cat((target_all, target), 0)\n","\n","  \n","  predicted_all = (torch.sigmoid(output_all) > .5).float()\n","  target_all = target_all.cpu()\n","  \n","  if cuda:\n","    target_all = target_all.cpu()\n","    predicted_all = predicted_all.cpu()\n","  \n","  # Print per class scores\n","  for i, c in enumerate(classes):\n","    print('{}: {}/{} ({:.1f}%) images with label\\n'.format(c.upper(),\n","                                                           int(target_all[:,i].sum()),\n","                                                           int(target_all[:,i].size()[0]),\n","                                                           100*int(target_all[:,i].sum())/int(target_all[:,i].size()[0])))\n","    print('Confusion matrix: \\n{}'.format(metrics.confusion_matrix(target_all[:,i], predicted_all[:,i], labels=[0.,1.])))\n","    print('Accuracy: {:.1f}%'.format(100*metrics.accuracy_score(target_all[:,i], predicted_all[:,i])))\n","    print('Precision: {:.1f}%'.format(100*metrics.precision_score(target_all[:,i], predicted_all[:,i])))\n","    print('Recall: {:.1f}%'.format(100*metrics.recall_score(target_all[:,i], predicted_all[:,i])))\n","    print('F1: {:.1f}%'.format(100*metrics.f1_score(target_all[:,i], predicted_all[:,i])))\n","    print()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"1hrM_gbWTzcw","colab_type":"code","outputId":"5290c1d4-e2d4-4779-90a9-501140f3f61e","executionInfo":{"status":"ok","timestamp":1558877035215,"user_tz":240,"elapsed":2227,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":761}},"source":["dataiter = iter(testloader)\n","images, labels = dataiter.next()\n","outputs = net(Variable(images).cuda())\n","\n","# Print images\n","imshow(torchvision.utils.make_grid(images))\n","\n","# Print target and predicted labels \n","print('GroundTruth: ', ' '.join('%5s' % classes[np.asarray(labels[j]) != 0] for j in range(4)))\n","print('Predicted: ', ' '.join('%5s' % classes[np.asarray(predicted[j]) != 0] for j in range(4)))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Exception ignored in: <bound method _DataLoaderIter.__del__ of <torch.utils.data.dataloader._DataLoaderIter object at 0x7fbb5df32470>>\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 677, in __del__\n","    self._shutdown_workers()\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 659, in _shutdown_workers\n","    w.join()\n","  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 122, in join\n","Exception ignored in: <bound method _DataLoaderIter.__del__ of <torch.utils.data.dataloader._DataLoaderIter object at 0x7fbb5df32470>>\n","    assert self._parent_pid == os.getpid(), 'can only join a child process'\n","AssertionError: can only join a child process\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 677, in __del__\n","    self._shutdown_workers()\n","Exception ignored in: <bound method _DataLoaderIter.__del__ of <torch.utils.data.dataloader._DataLoaderIter object at 0x7fbb5df32470>>\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 659, in _shutdown_workers\n","    w.join()\n","Traceback (most recent call last):\n","  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 122, in join\n","Exception ignored in: <bound method _DataLoaderIter.__del__ of <torch.utils.data.dataloader._DataLoaderIter object at 0x7fbb5df32470>>\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 677, in __del__\n","    assert self._parent_pid == os.getpid(), 'can only join a child process'\n","    self._shutdown_workers()\n","Traceback (most recent call last):\n","AssertionError: can only join a child process\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 677, in __del__\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 659, in _shutdown_workers\n","    self._shutdown_workers()\n","    w.join()\n","  File \"/usr/local/lib/python3.6/dist-packages/torch/utils/data/dataloader.py\", line 659, in _shutdown_workers\n","    w.join()\n","  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 122, in join\n","  File \"/usr/lib/python3.6/multiprocessing/process.py\", line 122, in join\n","    assert self._parent_pid == os.getpid(), 'can only join a child process'\n","AssertionError: can only join a child process\n","    assert self._parent_pid == os.getpid(), 'can only join a child process'\n","AssertionError: can only join a child process\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXoAAABmCAYAAADFw1rEAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzsvemvXVl63vdb0977nHPPHTkPxSKL\nLLKqyJqrq13dbXW3oraU2FEkI3GcxHKgGHYAKQmSCIhjOB8EJH9APgUwMkH6ECexDdktyW6l3aXu\nLvdQ8zxxJoszee/lvWfYe6/hzYe1zyVbCaKuQAUVGvcFCPIenmGfvdZ6h+d53vcqEWHbtm3btm3b\nfnZN/3lfwLZt27Zt27Z9trbt6Ldt27Zt237GbdvRb9u2bdu2/YzbtqPftm3btm37GbdtR79t27Zt\n2/YzbtuOftu2bdu27WfcPhNHr5T6RaXUR0qpM0qpv/tZfMa2bdu2bdu2/XSm/qx19EopA3wM/ALw\nCfAK8NdF5P0/0w/atm3btm3btp/KPouM/gvAGRE5JyIt8A+BX/4MPmfbtm3btm3bfgqzn8F77gcu\n3/fzJ8Dzf/JJSqm/DfxtAOfcMzt27PgMLmXbtm3btu1n165du3ZbRHb+ac/7LBz9T2Ui8g+AfwCw\nb98++ff/2l9mbtBjfn6JwWDIW2/8CEFz8fxFFuaHnDh2mP7CQn7s0gVEhDurG0w3Jzz88EPs37+X\naTulbRJVVfDBmcv4dsxzTzzOpve8+/4Zhv0KEzwPnjjGOx9fot24y194/in+5YvfZ+AcDx1/iLmF\nRd587Q2Wl5c4fuJh3nrzTY4dO8HHH3/Mc889xfr8KZQ1GK3Q3R/QGGMwxmCtRSmF1vkx5yzWaIrC\nUpYFzhgGpcX2Kub7AyyJfSsL1K2wp28QhBaIomiU0KKIrTDarGmTMPUeaQPBB5IIG1NP3UaiCGH1\nMrdHDTv9HV549gWWdyyjlKboO86+e4bd+/ZgjEFESCmhtUYpRUoJpUFhurVJGKtANH8S2lNKMdqc\nMpirUMCPPpigtMrPU+CUQWlAgVYKa8k/S36tBozWoMBo0Co/VwCnLUK+LlJEa0MU4Xd+93d4+/yE\nU7trNkY12igu3YocPrqbnkzYXF+ldCULy4vcuHyRquqxY+8Brpz7EN0b0I7WsD3N8tJB6rZlMNcj\n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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["GroundTruth:     [] ['sdwkpave' 'sidewalk' 'street_trees']    [] ['street_trees']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yFlWRhNuWWOC","colab_type":"code","outputId":"04891646-140a-471b-a603-1dc0aa69a426","executionInfo":{"status":"ok","timestamp":1558880772797,"user_tz":240,"elapsed":242,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":711}},"source":["%%time\n","\n","test_model(net, testloader)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["SDWKPAVE: 92/519 (17.7%) images with label\n","\n","Confusion matrix: \n","[[390  37]\n"," [ 58  34]]\n","Accuracy: 81.7%\n","Precision: 47.9%\n","Recall: 37.0%\n","F1: 41.7%\n","\n","SDWKSHDE: 24/519 (4.6%) images with label\n","\n","Confusion matrix: \n","[[490   5]\n"," [ 21   3]]\n","Accuracy: 95.0%\n","Precision: 37.5%\n","Recall: 12.5%\n","F1: 18.8%\n","\n","SIDEWALK: 403/519 (77.6%) images with label\n","\n","Confusion matrix: \n","[[ 85  31]\n"," [ 13 390]]\n","Accuracy: 91.5%\n","Precision: 92.6%\n","Recall: 96.8%\n","F1: 94.7%\n","\n","STREET_TREES: 148/519 (28.5%) images with label\n","\n","Confusion matrix: \n","[[337  34]\n"," [104  44]]\n","Accuracy: 73.4%\n","Precision: 56.4%\n","Recall: 29.7%\n","F1: 38.9%\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"3TTptgvaxOt5","colab_type":"text"},"source":["**Note:** Classification of SIDEWALK label is suprisingly good, in all scores. Almost supicious. The other three are not very good, most likely because there are not many images with those labels."]},{"cell_type":"markdown","metadata":{"id":"lVgbg8glayO7","colab_type":"text"},"source":["## 6. Use Transfer Learning from Places 365\n","\n","Transfer Learning tutorial:\n","\n","https://pytorch.org/tutorials/beginner/transfer_learning_tutorial.html\n","\n","Loading Places365 to PyTorch:\n","\n","https://github.com/CSAILVision/places365/blob/master/run_placesCNN_basic.py"]},{"cell_type":"code","metadata":{"id":"2sX2CHvTmKlo","colab_type":"code","colab":{}},"source":["def load_places_365_model(arch, path):\n","  \n","  # load the pre-trained weights\n","  model_file = path + '/%s_places365.pth.tar' % arch\n","  if not os.access(model_file, os.W_OK):\n","      weight_url = 'http://places2.csail.mit.edu/models_places365/' + model_file\n","      os.system('wget ' + weight_url)\n","\n","  model = models.__dict__[arch](num_classes=365)\n","  checkpoint = torch.load(model_file, map_location=lambda storage, loc: storage)\n","  state_dict = {str.replace(k,'module.',''): v for k,v in checkpoint['state_dict'].items()}\n","  model.load_state_dict(state_dict)\n","  \n","  return model\n","\n","def set_model_for_transfer_learning(model, out_ftrs, cuda=True):\n","  for param in model.parameters():\n","    param.requires_grad = False\n","\n","  # Parameters of newly constructed modules have requires_grad=True by default\n","  num_ftrs = model.fc.in_features\n","  model.fc = nn.Linear(num_ftrs, out_ftrs)\n","  \n","  if cuda:\n","    model = model.cuda()\n","    \n","  print(model.eval())\n","  \n","  return model"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zX-1gnPkrfro","colab_type":"text"},"source":["### Using ResNet50-places365"]},{"cell_type":"code","metadata":{"id":"dPHUq8pdyagU","colab_type":"code","outputId":"edaabac4-dd73-4388-8783-f5163b5f7c3e","executionInfo":{"status":"ok","timestamp":1558967870499,"user_tz":240,"elapsed":977,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":3068}},"source":["model_resnet50_places365 = load_places_365_model(arch='resnet50',\n","                                                 path=path)\n","\n","model_resnet50_places365 = set_model_for_transfer_learning(model_resnet50_places365, 4)\n","\n","optim_sgd = optim.SGD(model_resnet50_places365.fc.parameters(), lr=0.001, momentum=0.9)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["ResNet(\n","  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)\n","  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","  (relu): ReLU(inplace)\n","  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n","  (layer1): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (layer2): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (3): Bottleneck(\n","      (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (layer3): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (3): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (4): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (5): Bottleneck(\n","      (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (layer4): Sequential(\n","    (0): Bottleneck(\n","      (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","      (downsample): Sequential(\n","        (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): Bottleneck(\n","      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","    (2): Bottleneck(\n","      (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n","      (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace)\n","    )\n","  )\n","  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n","  (fc): Linear(in_features=2048, out_features=365, bias=True)\n",")\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uanWgpBSic9h","colab_type":"code","outputId":"6adf633b-c17d-45b4-cf03-06f9cac08082","executionInfo":{"status":"ok","timestamp":1558971129580,"user_tz":240,"elapsed":55723,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":763}},"source":["%%time\n","\n","train_model(model=model_resnet50_places365,\n","            dataloader=trainloader,\n","            criterion=bce_logit_loss,\n","            optimizer=optim_sgd,\n","            n_epochs=40)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[epoch 1] loss: 0.364\n","[epoch 2] loss: 0.312\n","[epoch 3] loss: 0.299\n","[epoch 4] loss: 0.291\n","[epoch 5] loss: 0.285\n","[epoch 6] loss: 0.281\n","[epoch 7] loss: 0.277\n","[epoch 8] loss: 0.274\n","[epoch 9] loss: 0.271\n","[epoch 10] loss: 0.269\n","[epoch 11] loss: 0.267\n","[epoch 12] loss: 0.265\n","[epoch 13] loss: 0.263\n","[epoch 14] loss: 0.261\n","[epoch 15] loss: 0.260\n","[epoch 16] loss: 0.259\n","[epoch 17] loss: 0.257\n","[epoch 18] loss: 0.256\n","[epoch 19] loss: 0.255\n","[epoch 20] loss: 0.254\n","[epoch 21] loss: 0.253\n","[epoch 22] loss: 0.252\n","[epoch 23] loss: 0.251\n","[epoch 24] loss: 0.250\n","[epoch 25] loss: 0.249\n","[epoch 26] loss: 0.248\n","[epoch 27] loss: 0.248\n","[epoch 28] loss: 0.247\n","[epoch 29] loss: 0.246\n","[epoch 30] loss: 0.245\n","[epoch 31] loss: 0.245\n","[epoch 32] loss: 0.244\n","[epoch 33] loss: 0.243\n","[epoch 34] loss: 0.243\n","[epoch 35] loss: 0.242\n","[epoch 36] loss: 0.241\n","[epoch 37] loss: 0.241\n","[epoch 38] loss: 0.240\n","[epoch 39] loss: 0.240\n","[epoch 40] loss: 0.239\n","Finished Training\n","CPU times: user 7min 18s, sys: 1min 37s, total: 8min 55s\n","Wall time: 54min 14s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5HSHSypjiq-w","colab_type":"code","outputId":"e1d812d6-2878-4ac4-c742-11152a342318","executionInfo":{"status":"ok","timestamp":1558971150324,"user_tz":240,"elapsed":20237,"user":{"displayName":"Pablo Mandiola","photoUrl":"","userId":"07261621586364051368"}},"colab":{"base_uri":"https://localhost:8080/","height":711}},"source":["test_model(model_resnet50_places365, testloader)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["SDWKPAVE: 92/519 (17.7%) images with label\n","\n","Confusion matrix: \n","[[417  10]\n"," [ 65  27]]\n","Accuracy: 85.5%\n","Precision: 73.0%\n","Recall: 29.3%\n","F1: 41.9%\n","\n","SDWKSHDE: 24/519 (4.6%) images with label\n","\n","Confusion matrix: \n","[[493   2]\n"," [ 21   3]]\n","Accuracy: 95.6%\n","Precision: 60.0%\n","Recall: 12.5%\n","F1: 20.7%\n","\n","SIDEWALK: 403/519 (77.6%) images with label\n","\n","Confusion matrix: \n","[[ 86  30]\n"," [ 11 392]]\n","Accuracy: 92.1%\n","Precision: 92.9%\n","Recall: 97.3%\n","F1: 95.0%\n","\n","STREET_TREES: 148/519 (28.5%) images with label\n","\n","Confusion matrix: \n","[[343  28]\n"," [ 60  88]]\n","Accuracy: 83.0%\n","Precision: 75.9%\n","Recall: 59.5%\n","F1: 66.7%\n","\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"H87tIzV-7j1x","colab_type":"text"},"source":["**Note:** Slight improvement in SIDEWALK classification. All others improved a lot, specially STREET_TREES."]}]}